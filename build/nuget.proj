<?xml version="1.0"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <RootPath>$(MSBuildProjectDirectory)\..</RootPath>
    <PackagesPath>$(MSBuildProjectDirectory)\packages</PackagesPath>
    <BuildDirectory>$(RootPath)\build</BuildDirectory>
    <TargetDirectory>$(BuildDirectory)\output\nuget</TargetDirectory>
    <NuGetExe Condition="$(NuGetExe) == ''">$(RootPath)\.nuget\nuget.exe</NuGetExe>
    <MSBuildCommunityTasksPath>$(PackagesPath)\MSBuildTasks.1.5.0.196\tools</MSBuildCommunityTasksPath>
  </PropertyGroup>
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets"/>
  <Import Project="Utils.targets" />

  <Target Name="InitVersion">
    <ReadLinesFromFile File="$(RootPath)\version.txt">
      <Output TaskParameter="Lines" PropertyName="PackageVersionPrefix" />
    </ReadLinesFromFile>
    
    <PropertyGroup>
       <PackageVersion Condition="'$(PackageVersion)'==''">$(PackageVersionPrefix).0</PackageVersion>
       <IsPrerelease Condition="'$(IsPrerelease)'==''">false</IsPrerelease>
       <PrereleaseName Condition="'$(PrereleaseName)'==''">beta</PrereleaseName>
    </PropertyGroup>
    
    <GetVersionParts VersionNumber="$(PackageVersion)">
      <Output TaskParameter="MajorVersion" PropertyName="Major" />
      <Output TaskParameter="MinorVersion" PropertyName="Minor" />
      <Output TaskParameter="BuildVersion" PropertyName="Build" />
      <Output TaskParameter="RevisionVersion" PropertyName="Revision" />
    </GetVersionParts>
    
    <PropertyGroup>
       <NuSpecVersion>$(Major).$(Minor).$(Build)</NuSpecVersion>
       <NuSpecVersion Condition="'$(IsPrerelease)'=='true'">$(Major).$(Minor).$(Build)-$(PrereleaseName)</NuSpecVersion>
    </PropertyGroup>
  </Target>
  
  <Target Name="InitPack">
	<RemoveDir ContinueOnError="false"
			   Directories="$(TargetDirectory)"
			   Condition="Exists('$(TargetDirectory)')" />
  </Target>
  
  <Target Name="WriteVersionInNuSpec">
    <Time>
      <Output TaskParameter="Year" PropertyName="Year" />
    </Time>
	
    <XmlUpdate
      Prefix="ns"
      Namespace="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd"
      XmlFileName="DavidLievrouw.Utils.nuspec"
      XPath="/package/metadata/version"
      Value="$(NuSpecVersion)" />
    <XmlUpdate
      Prefix="ns"
      Namespace="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd"
      XmlFileName="DavidLievrouw.Utils.nuspec"
      XPath="/package/metadata/copyright"
      Value="Copyright (c) $(Year) David Lievrouw" />
    <XmlUpdate
      Prefix="ns"
      Namespace="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd"
      XmlFileName="DavidLievrouw.Utils.ForTesting.nuspec"
      XPath="/package/metadata/version"
      Value="$(NuSpecVersion)" />
    <XmlUpdate
      Prefix="ns"
      Namespace="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd"
      XmlFileName="DavidLievrouw.Utils.ForTesting.nuspec"
      XPath="/package/metadata/dependencies/group[@targetFramework='net452']/dependency[@id='DavidLievrouw.Utils']/@version"
      Value="$(NuSpecVersion)" />
    <XmlUpdate
      Prefix="ns"
      Namespace="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd"
      XmlFileName="DavidLievrouw.Utils.ForTesting.nuspec"
      XPath="/package/metadata/copyright"
      Value="Copyright (c) $(Year) David Lievrouw" />
  </Target>
  
  <Target Name="Pack" DependsOnTargets="InitVersion;InitPack;WriteVersionInNuSpec;">
    <MakeDir ContinueOnError="false" Directories="$(TargetDirectory)" Condition="!Exists('$(TargetDirectory)')" />
    <Exec Command='&quot;$(NuGetExe)&quot; pack &quot;$(MSBuildProjectDirectory)\DavidLievrouw.Utils.nuspec&quot; -Version $(NuSpecVersion) -NonInteractive -o &quot;$(TargetDirectory)&quot;' />
    <Exec Command='&quot;$(NuGetExe)&quot; pack &quot;$(MSBuildProjectDirectory)\DavidLievrouw.Utils.ForTesting.nuspec&quot; -Version $(NuSpecVersion) -NonInteractive -o &quot;$(TargetDirectory)&quot;' />    
  </Target>

  <Target Name="Push" DependsOnTargets="InitVersion">
    <Exec Command='$(NuGetExe) push $(TargetDirectory)\DavidLievrouw.Utils.$(NuSpecVersion).nupkg' />
    <Exec Command='$(NuGetExe) push $(TargetDirectory)\DavidLievrouw.Utils.ForTesting.$(NuSpecVersion).nupkg' />
  </Target>
</Project>
